        -:    0:Source:./tic_tac_toe.c
        -:    0:Graph:tests.gcno
        -:    0:Data:tests.gcda
        -:    0:Runs:0
        -:    0:Programs:0
        -:    1:# include <stdio.h>
        -:    2:# include <stdlib.h>
        -:    3:# include <stdbool.h>
        -:    4:// This will have the implementations for displayGrid, checkWin, isValidMove, isDraw, and any other helper functions we need.
        -:    5:
        -:    6:
        -:    7:// intialize the board (3x3 grid)
        -:    8:char board[3][3];
        -:    9:
        -:   10://initialize the board with empty spaces to start
        6:   11:void initializeBoard() { // no board is passed in because we are using the global board
       24:   12:    for (int i = 0; i < 3; i++ ){
       72:   13:        for (int j = 0; j < 3; j++) {
       54:   14:            board[i][j] = ' ';
       54:   15:        }
       18:   16:    }
        6:   17:}
        -:   18:
        -:   19:// display the board
    #####:   20:void displayBoard() {
    #####:   21:    for (int i = 0; i < 3; i++) {
    #####:   22:        for (int j = 0; j < 3; j++) {
    #####:   23:            printf("%c", board[i][j]); // print the board 
    #####:   24:            if (j != 2){ // if we are not at the end of the row
    #####:   25:                printf(" | "); // print the vertical lines
    #####:   26:            }
    #####:   27:        }
    #####:   28:        printf("\n"); // print the horizontal lines
    #####:   29:        if (i != 2) { // if we are not at the end of the column
    #####:   30:            printf("---------\n"); // print the horizontal lines
    #####:   31:        }
    #####:   32:    }
    #####:   33:}
        -:   34:
        -:   35:// check if the move is valid
       10:   36:bool isValidMove(int row, int column) {
       10:   37:    return (
       10:   38:            row >= 0 // if the row is greater than or equal to 0 and 
       10:   39:            && row < 3 // less than 3 and
       10:   40:            && column >= 0 // the column is greater than or equal to 0 and
        8:   41:            && column < 3 // less than 3 and
        8:   42:            && board[row][column] == ' '); // the board at the row and column is empty
        -:   43:            // if all these conditions are true, then the move is valid becuase it is within the bounds of the board and the space is empty
        -:   44:}
        -:   45:
        -:   46:// Check if someone has won
        8:   47:bool checkWin(char player) {
        -:   48:    // check the rows and columns
       26:   49:    for (int i = 0; i < 3; i++) {
        -:   50:        // check the rows
       20:   51:        if (board[i][0] == player && board[i][1] == player && board[i][2] == player) { // check the rows
        1:   52:            return true;
        -:   53:        }
        -:   54:        // check the columns
       19:   55:        if (board[0][i] == player && board[1][i] == player && board[2][i] == player) { // check the columns
        1:   56:            return true;
        -:   57:        }
       18:   58:    }
        -:   59:    // check the positive slope diagonal
        6:   60:    if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
        1:   61:        return true;
        -:   62:    }
        -:   63:    // check the negative slope diagonal
        5:   64:    if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
        1:   65:        return true;
        -:   66:    }
        4:   67:    return false; // no win
        8:   68:}
        -:   69:
        -:   70:// check if the game is a draw
    #####:   71:bool isDraw() {
        -:   72:    // check if the board is full
    #####:   73:    for (int i = 0; i < 3; i++){
    #####:   74:        for (int j = 0; j < 3; j++){
    #####:   75:            if (board[i][j] == ' ') { // if there is an empty space
    #####:   76:                return false; // the game is not a draw
        -:   77:            }
    #####:   78:        }
    #####:   79:    }
    #####:   80:    return true; // the game is a draw
    #####:   81:}
